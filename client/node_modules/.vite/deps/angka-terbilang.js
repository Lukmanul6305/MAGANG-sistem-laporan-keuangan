import {
  __commonJS
} from "./chunk-Q4XP6UTR.js";

// node_modules/angka-terbilang/dist/number-to-string.js
var require_number_to_string = __commonJS({
  "node_modules/angka-terbilang/dist/number-to-string.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function main(value) {
      if (value === 0 || value === "0")
        return "nol";
      return numberToString(value);
    }
    exports.default = main;
    function numberToString(value) {
      if (!value) {
        return "";
      }
      let num;
      let numStr;
      if (typeof value === "number") {
        num = value;
        numStr = value.toString();
      } else if (typeof value === "string") {
        num = parseInt(value, 10);
        numStr = value;
      } else {
        throw new Error("value must be either string or number");
      }
      if (num < 12) {
        return convertNumber(numStr);
      }
      const nums = [];
      for (const n of numStr) {
        nums.push(convertNumber(n));
      }
      if (num < 20) {
        return nums[1] + " belas";
      }
      if (num < 100) {
        return (nums[0] + " puluh " + nums[1]).trim();
      }
      if (num < 200) {
        return ("seratus " + numberToString(parseInt(numStr.substring(1), 10))).trim();
      }
      if (num < 1e3) {
        return (nums[0] + " ratus " + numberToString(parseInt(numStr.substring(1), 10))).trim();
      }
      if (num < 2e3) {
        return ("seribu " + numberToString(parseInt(numStr.substring(1), 10))).trim();
      }
      if (num < 1e4) {
        return (nums[0] + " ribu " + numberToString(parseInt(numStr.substring(1), 10))).trim();
      }
      if (num < 1e6) {
        const perThousands = numStr.match(/\d{1,3}(?=(\d{3})*$)/g);
        return (numberToString(parseInt(perThousands[0], 10)) + " ribu " + numberToString(parseInt(perThousands[1], 10))).trim();
      }
      if (num < 1e9) {
        const perThousands = numStr.match(/\d{1,3}(?=(\d{3})*$)/g);
        return (numberToString(parseInt(perThousands[0], 10)) + " juta " + numberToString(parseInt(joinRest(perThousands), 10))).trim();
      }
      if (num < 1e12) {
        const perThousands = numStr.match(/\d{1,3}(?=(\d{3})*$)/g);
        return (numberToString(parseInt(perThousands[0], 10)) + " milyar " + numberToString(parseInt(joinRest(perThousands), 10))).trim();
      }
      return "";
    }
    function joinRest(arr) {
      arr.splice(0, 1);
      return arr.join("");
    }
    function convertNumber(value) {
      switch (value) {
        case "1":
          return "satu";
        case "2":
          return "dua";
        case "3":
          return "tiga";
        case "4":
          return "empat";
        case "5":
          return "lima";
        case "6":
          return "enam";
        case "7":
          return "tujuh";
        case "8":
          return "delapan";
        case "9":
          return "sembilan";
        case "10":
          return "sepuluh";
        case "11":
          return "sebelas";
        default:
          return "";
      }
    }
  }
});

// node_modules/angka-terbilang/dist/index.js
var require_dist = __commonJS({
  "node_modules/angka-terbilang/dist/index.js"(exports) {
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_number_to_string(), exports);
  }
});
export default require_dist();
//# sourceMappingURL=angka-terbilang.js.map
