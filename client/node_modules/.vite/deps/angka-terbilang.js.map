{
  "version": 3,
  "sources": ["../../angka-terbilang/dist/number-to-string.js", "../../angka-terbilang/dist/index.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction main(value) {\n    if (value === 0 || value === '0')\n        return 'nol';\n    return numberToString(value);\n}\nexports.default = main;\nfunction numberToString(value) {\n    if (!value) {\n        return '';\n    }\n    let num;\n    let numStr;\n    if (typeof value === 'number') {\n        num = value;\n        numStr = value.toString();\n    }\n    else if (typeof value === 'string') {\n        num = parseInt(value, 10);\n        numStr = value;\n    }\n    else {\n        throw new Error('value must be either string or number');\n    }\n    if (num < 12) {\n        return convertNumber(numStr);\n    }\n    const nums = [];\n    for (const n of numStr) {\n        nums.push(convertNumber(n));\n    }\n    if (num < 20) {\n        return nums[1] + ' belas';\n    }\n    if (num < 100) {\n        return (nums[0] + ' puluh ' + nums[1]).trim();\n    }\n    if (num < 200) {\n        return ('seratus ' + numberToString(parseInt(numStr.substring(1), 10))).trim();\n    }\n    if (num < 1000) {\n        return (nums[0] + ' ratus ' + numberToString(parseInt(numStr.substring(1), 10))).trim();\n    }\n    if (num < 2000) {\n        return ('seribu ' + numberToString(parseInt(numStr.substring(1), 10))).trim();\n    }\n    if (num < 10000) {\n        return (nums[0] + ' ribu ' + numberToString(parseInt(numStr.substring(1), 10))).trim();\n    }\n    if (num < 1000000) {\n        const perThousands = numStr.match(/\\d{1,3}(?=(\\d{3})*$)/g);\n        return (numberToString(parseInt(perThousands[0], 10)) +\n            ' ribu ' +\n            numberToString(parseInt(perThousands[1], 10))).trim();\n    }\n    if (num < 1000000000) {\n        const perThousands = numStr.match(/\\d{1,3}(?=(\\d{3})*$)/g);\n        return (numberToString(parseInt(perThousands[0], 10)) +\n            ' juta ' +\n            numberToString(parseInt(joinRest(perThousands), 10))).trim();\n    }\n    if (num < 1000000000000) {\n        const perThousands = numStr.match(/\\d{1,3}(?=(\\d{3})*$)/g);\n        return (numberToString(parseInt(perThousands[0], 10)) +\n            ' milyar ' +\n            numberToString(parseInt(joinRest(perThousands), 10))).trim();\n    }\n    return '';\n}\nfunction joinRest(arr) {\n    arr.splice(0, 1);\n    return arr.join('');\n}\nfunction convertNumber(value) {\n    switch (value) {\n        case '1':\n            return 'satu';\n        case '2':\n            return 'dua';\n        case '3':\n            return 'tiga';\n        case '4':\n            return 'empat';\n        case '5':\n            return 'lima';\n        case '6':\n            return 'enam';\n        case '7':\n            return 'tujuh';\n        case '8':\n            return 'delapan';\n        case '9':\n            return 'sembilan';\n        case '10':\n            return 'sepuluh';\n        case '11':\n            return 'sebelas';\n        default:\n            return '';\n    }\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./number-to-string\"), exports);\n"],
  "mappings": "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",
  "names": ["exports"]
}
