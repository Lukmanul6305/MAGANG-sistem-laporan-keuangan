"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Benchmark = require("benchmark");
const number_to_string_1 = require("./number-to-string");
const suite = new Benchmark.Suite('fds', {});
suite
    .add('input -> 1', () => number_to_string_1.default(1))
    .add('input -> 2', () => number_to_string_1.default(2))
    .add('input -> 3', () => number_to_string_1.default(3))
    .add('input -> 4', () => number_to_string_1.default(4))
    .add('input -> 5', () => number_to_string_1.default(5))
    .add('input -> 6', () => number_to_string_1.default(6))
    .add('input -> 7', () => number_to_string_1.default(7))
    .add('input -> 8', () => number_to_string_1.default(8))
    .add('input -> 9', () => number_to_string_1.default(9))
    .add('input -> 10', () => number_to_string_1.default(10))
    .add('input -> 11', () => number_to_string_1.default(11))
    .add('input -> 12', () => number_to_string_1.default(12))
    .add('input -> 16', () => number_to_string_1.default(16))
    .add('input -> 19', () => number_to_string_1.default(19))
    .add('input -> 20', () => number_to_string_1.default(20))
    .add('input -> 21', () => number_to_string_1.default(21))
    .add('input -> 45', () => number_to_string_1.default(45))
    .add('input -> 99', () => number_to_string_1.default(99))
    .add('input -> 100', () => number_to_string_1.default(100))
    .add('input -> 101', () => number_to_string_1.default(101))
    .add('input -> 153', () => number_to_string_1.default(153))
    .add('input -> 199', () => number_to_string_1.default(199))
    .add('input -> 200', () => number_to_string_1.default(200))
    .add('input -> 201', () => number_to_string_1.default(201))
    .add('input -> 212', () => number_to_string_1.default(212))
    .add('input -> 530', () => number_to_string_1.default(530))
    .add('input -> 999', () => number_to_string_1.default(999))
    .add('input -> 1000', () => number_to_string_1.default(1000))
    .add('input -> 1001', () => number_to_string_1.default(1001))
    .add('input -> 1102', () => number_to_string_1.default(1102))
    .add('input -> 1536', () => number_to_string_1.default(1536))
    .add('input -> 1999', () => number_to_string_1.default(1999))
    .add('input -> 2000', () => number_to_string_1.default(2000))
    .add('input -> 2001', () => number_to_string_1.default(2001))
    .add('input -> 5379', () => number_to_string_1.default(5379))
    .add('input -> 9999', () => number_to_string_1.default(9999))
    .add('input -> 10000', () => number_to_string_1.default(10000))
    .add('input -> 20001', () => number_to_string_1.default(20001))
    .add('input -> 500379', () => number_to_string_1.default(500379))
    .add('input -> 999999', () => number_to_string_1.default(999999))
    .add('input -> 1000000', () => number_to_string_1.default(1000000))
    .add('input -> 1000100', () => number_to_string_1.default(1000100))
    .add('input -> 12323344', () => number_to_string_1.default(12323344))
    .add('input -> 321312333', () => number_to_string_1.default(321312333))
    .add('input -> 999999999', () => number_to_string_1.default(999999999))
    .add('input -> 1000000000', () => number_to_string_1.default(1000000000))
    .add('input -> 1001000000', () => number_to_string_1.default(1001000000))
    .add('input -> 587363123376', () => number_to_string_1.default(587363123376))
    .add('input -> 789632362376', () => number_to_string_1.default(789632362376))
    .add('input -> 999999999999', () => number_to_string_1.default(999999999999))
    .add('input -> \'1000000000\'', () => number_to_string_1.default('1000000000'))
    .add('input -> \'1001000000\'', () => number_to_string_1.default('1001000000'))
    .add('input -> \'587363123376\'', () => number_to_string_1.default('587363123376'))
    .add('input -> \'789632362376\'', () => number_to_string_1.default('789632362376'))
    .add('input -> \'999999999999\'', () => number_to_string_1.default('999999999999'))
    .on("start", (event) => {
    console.log('\nbenchmark start\n=====================');
})
    .on("cycle", (event) => {
    console.log(String(event.target));
})
    .on("complete", () => {
    const fastest = suite.filter('fastest')[0];
    const slowest = suite.filter('slowest')[0];
    console.log('\nbenchmark complete\n=====================');
    console.log('fastest: ' + formatNumber(fastest.hz, 0) + ' ops/sec ±' + formatNumber(fastest.stats.rme, 2) + '%');
    console.log('slowest: ' + formatNumber(slowest.hz, 0) + ' ops/sec ±' + formatNumber(slowest.stats.rme, 2) + '%');
})
    .run();
function formatNumber(num, fraction) {
    return new Intl.NumberFormat('en-US', { maximumFractionDigits: fraction }).format(num);
}
